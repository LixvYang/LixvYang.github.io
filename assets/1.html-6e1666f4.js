const n=JSON.parse('{"key":"v-e7a26318","path":"/posts/program/golang/%E5%B8%B8%E7%94%A8%E6%A1%86%E6%9E%B6%E5%B7%A5%E5%85%B7/grpc/1.html","title":"GRPC教程 1- Go语言原生RPC原理","lang":"zh-CN","frontmatter":{"icon":"basil:edit-solid","date":"2023-03-27T00:00:00.000Z","isOriginal":true,"category":["tutorial"],"tag":["golang","grpc"],"description":"GRPC教程 1- Go语言原生RPC原理 相关信息 本篇文章介绍一下RPC的概念以及在Go语言如何使用标准库中的RPC. RPC是全称叫Remote Procedure Call，远程过程调用，它允许像调用本地服务一样去调用远程服务，相对应的就是本地调用。 本地调用的例子: package main import ( \\t\\"fmt\\" \\t\\"os\\" \\t\\"time\\" ) type Args struct { \\tA int \\tB int } func Add(args *Args) int { \\treturn args.A + args.B } func main() { \\tfmt.Println(os.Getpid()) \\tfmt.Println(Add(&amp;Args{10, 20})) \\ttime.Sleep(100 * time.Second) }","head":[["meta",{"property":"og:url","content":"https://yanglixin.com/posts/program/golang/%E5%B8%B8%E7%94%A8%E6%A1%86%E6%9E%B6%E5%B7%A5%E5%85%B7/grpc/1.html"}],["meta",{"property":"og:title","content":"GRPC教程 1- Go语言原生RPC原理"}],["meta",{"property":"og:description","content":"GRPC教程 1- Go语言原生RPC原理 相关信息 本篇文章介绍一下RPC的概念以及在Go语言如何使用标准库中的RPC. RPC是全称叫Remote Procedure Call，远程过程调用，它允许像调用本地服务一样去调用远程服务，相对应的就是本地调用。 本地调用的例子: package main import ( \\t\\"fmt\\" \\t\\"os\\" \\t\\"time\\" ) type Args struct { \\tA int \\tB int } func Add(args *Args) int { \\treturn args.A + args.B } func main() { \\tfmt.Println(os.Getpid()) \\tfmt.Println(Add(&amp;Args{10, 20})) \\ttime.Sleep(100 * time.Second) }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-02T09:43:53.000Z"}],["meta",{"property":"article:author","content":"离心"}],["meta",{"property":"article:tag","content":"golang"}],["meta",{"property":"article:tag","content":"grpc"}],["meta",{"property":"article:published_time","content":"2023-03-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-02T09:43:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GRPC教程 1- Go语言原生RPC原理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-02T09:43:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"离心\\"}]}"]]},"headers":[],"git":{"createdTime":1693711577000,"updatedTime":1696239833000,"contributors":[{"name":"lixin","email":"lixin@lixins-MacBook-Pro.local","commits":2}]},"readingTime":{"minutes":1.5,"words":449},"filePathRelative":"posts/program/golang/常用框架工具/grpc/1.md","localizedDate":"2023年3月27日","excerpt":"<h1> GRPC教程 1- Go语言原生RPC原理</h1>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">相关信息</p>\\n<p>本篇文章介绍一下RPC的概念以及在Go语言如何使用标准库中的RPC.</p>\\n<p>RPC是全称叫Remote Procedure Call，远程过程调用，它允许像调用本地服务一样去调用远程服务，相对应的就是本地调用。</p>\\n</div>\\n<p>本地调用的例子:</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">package</span> main\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">(</span>\\n\\t<span class=\\"token string\\">\\"fmt\\"</span>\\n\\t<span class=\\"token string\\">\\"os\\"</span>\\n\\t<span class=\\"token string\\">\\"time\\"</span>\\n<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">type</span> Args <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n\\tA <span class=\\"token builtin\\">int</span>\\n\\tB <span class=\\"token builtin\\">int</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span>args <span class=\\"token operator\\">*</span>Args<span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">int</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">return</span> args<span class=\\"token punctuation\\">.</span>A <span class=\\"token operator\\">+</span> args<span class=\\"token punctuation\\">.</span>B \\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span>os<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Getpid</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>Args<span class=\\"token punctuation\\">{</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">20</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\ttime<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Sleep</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">100</span> <span class=\\"token operator\\">*</span> time<span class=\\"token punctuation\\">.</span>Second<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
