const t=JSON.parse('{"key":"v-964b6834","path":"/posts/program/golang/design-patterns/structural/Adapter.html","title":"适配器模式","lang":"zh-CN","frontmatter":{"icon":"carbon:character-patterns","date":"2023-10-16T00:00:00.000Z","isOriginal":true,"category":["tutorial"],"tag":["golang","design-patterns"],"description":"适配器是一种结构型设计模式，它能使不兼容的接口匹配和工作。","head":[["meta",{"property":"og:url","content":"https://yanglixin.com/posts/program/golang/design-patterns/structural/Adapter.html"}],["meta",{"property":"og:title","content":"适配器模式"}],["meta",{"property":"og:description","content":"适配器是一种结构型设计模式，它能使不兼容的接口匹配和工作。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T09:54:44.000Z"}],["meta",{"property":"article:author","content":"离心"}],["meta",{"property":"article:tag","content":"golang"}],["meta",{"property":"article:tag","content":"design-patterns"}],["meta",{"property":"article:published_time","content":"2023-10-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T09:54:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"适配器模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T09:54:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"离心\\"}]}"]]},"headers":[{"level":2,"title":"用处","slug":"用处","link":"#用处","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1697467249000,"updatedTime":1697968484000,"contributors":[{"name":"lixin","email":"lixin@lixins-MacBook-Pro.local","commits":3}]},"readingTime":{"minutes":2.51,"words":752},"filePathRelative":"posts/program/golang/design-patterns/structural/Adapter.md","localizedDate":"2023年10月16日","excerpt":"<p>适配器是一种结构型设计模式，它能使不兼容的接口匹配和工作。</p>\\n","autoDesc":true}');export{t as data};
