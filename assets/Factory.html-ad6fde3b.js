const t=JSON.parse('{"key":"v-69c0f5be","path":"/posts/program/golang/design-patterns/creational/Factory.html","title":"工厂模式","lang":"zh-CN","frontmatter":{"icon":"carbon:character-patterns","date":"2023-10-10T00:00:00.000Z","isOriginal":true,"category":["tutorial"],"tag":["golang","design-patterns"],"description":"工厂模式是面向对象编程语言中常用的设计模式，用于抽象对象创建过程。 代码不直接实例化对象，而是向工厂对象请求实例，工厂对象负责返回完全初始化的对象。","head":[["meta",{"property":"og:url","content":"https://yanglixin.com/posts/program/golang/design-patterns/creational/Factory.html"}],["meta",{"property":"og:title","content":"工厂模式"}],["meta",{"property":"og:description","content":"工厂模式是面向对象编程语言中常用的设计模式，用于抽象对象创建过程。 代码不直接实例化对象，而是向工厂对象请求实例，工厂对象负责返回完全初始化的对象。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T11:53:40.000Z"}],["meta",{"property":"article:author","content":"离心"}],["meta",{"property":"article:tag","content":"golang"}],["meta",{"property":"article:tag","content":"design-patterns"}],["meta",{"property":"article:published_time","content":"2023-10-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T11:53:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"工厂模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-10T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T11:53:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"离心\\"}]}"]]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"用处","slug":"用处","link":"#用处","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[{"level":3,"title":"简单工厂","slug":"简单工厂","link":"#简单工厂","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1697716420000,"updatedTime":1697716420000,"contributors":[{"name":"lixin","email":"lixin@lixins-MacBook-Pro.local","commits":1}]},"readingTime":{"minutes":2.26,"words":678},"filePathRelative":"posts/program/golang/design-patterns/creational/Factory.md","localizedDate":"2023年10月10日","excerpt":"<p>工厂模式是面向对象编程语言中常用的设计模式，用于抽象对象创建过程。</p>\\n<p>代码不直接实例化对象，而是向工厂对象请求实例，工厂对象负责返回完全初始化的对象。</p>\\n","autoDesc":true}');export{t as data};
