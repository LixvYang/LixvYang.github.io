const t=JSON.parse('{"key":"v-7416be34","path":"/posts/program/golang/design-patterns/creational/Prototype.html","title":"原型模式","lang":"zh-CN","frontmatter":{"icon":"carbon:character-patterns","date":"2023-10-13T00:00:00.000Z","isOriginal":true,"category":["tutorial"],"tag":["golang","design-patterns"],"description":"原型模式是一种创建型设计模式,使我们可以基于已有对象复制一个又一个新对象，而又无需使代码依赖它们所属的类。 最简单的方式就是在创建类的时候附加一个Clone的方法。","head":[["meta",{"property":"og:url","content":"https://yanglixin.com/posts/program/golang/design-patterns/creational/Prototype.html"}],["meta",{"property":"og:title","content":"原型模式"}],["meta",{"property":"og:description","content":"原型模式是一种创建型设计模式,使我们可以基于已有对象复制一个又一个新对象，而又无需使代码依赖它们所属的类。 最简单的方式就是在创建类的时候附加一个Clone的方法。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T11:53:40.000Z"}],["meta",{"property":"article:author","content":"离心"}],["meta",{"property":"article:tag","content":"golang"}],["meta",{"property":"article:tag","content":"design-patterns"}],["meta",{"property":"article:published_time","content":"2023-10-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T11:53:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"原型模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-13T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T11:53:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"离心\\"}]}"]]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"用处","slug":"用处","link":"#用处","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1697716420000,"updatedTime":1697716420000,"contributors":[{"name":"lixin","email":"lixin@lixins-MacBook-Pro.local","commits":1}]},"readingTime":{"minutes":1.87,"words":561},"filePathRelative":"posts/program/golang/design-patterns/creational/Prototype.md","localizedDate":"2023年10月13日","excerpt":"<p>原型模式是一种创建型设计模式,使我们可以基于已有对象复制一个又一个新对象，而又无需使代码依赖它们所属的类。</p>\\n<p>最简单的方式就是在创建类的时候附加一个<code>Clone</code>的方法。</p>\\n","autoDesc":true}');export{t as data};
