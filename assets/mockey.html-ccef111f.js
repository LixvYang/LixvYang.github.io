import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as p,c,b as n,d as s,a as e,f as i}from"./app-ceff173e.js";const l={},u=n("h1",{id:"mockey-教程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mockey-教程","aria-hidden":"true"},"#"),s(" Mockey 教程")],-1),k=n("p",null,"mock在单元测试中非常重要，mock可以理解为构建一个替换的功能，可以是完整接口的替换，又或者是某个类下方法的替换。",-1),r=n("p",null,"本文介绍一下Go语言里字节开源的的Mockey框架。",-1),d={href:"https://github.com/bytedance/mockey",target:"_blank",rel:"noopener noreferrer"},m=i(`<p>在github的README下有一个一句话值得注意:</p><div class="hint-container info"><p class="hint-container-title">信息</p><p>The bottom layer is monkey patch realized by rewriting function instructions at runtime.</p></div><p>由此我们可以理解，mockey其实是通过在运行时重写函数指令实现的monkey patch。</p><p>mockey支持的功能如下</p><ol><li>mock 函数和方法 <ul><li>基础功能 <ul><li>普通/可变参数函数</li><li>普通/可变参数方法</li><li>嵌套结构体方法</li><li>私有类型的导出方法（不同包下）</li></ul></li><li>高级功能 <ul><li>mock 后执行原函数</li><li>goroutine 条件过滤</li><li>增量改变 mock 行为</li><li>获取原函数执行次数</li><li>获取 mock 函数执行次数</li></ul></li></ul></li><li>mock 变量 <ul><li>普通变量</li><li>函数变量</li></ul></li></ol><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">go</span> get github<span class="token punctuation">.</span>com<span class="token operator">/</span>bytedance<span class="token operator">/</span>mockey@latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;testing&quot;</span>

	<span class="token punctuation">.</span> <span class="token string">&quot;github.com/bytedance/mockey&quot;</span>
	<span class="token punctuation">.</span> <span class="token string">&quot;github.com/smartystreets/goconvey/convey&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">Foo</span><span class="token punctuation">(</span>in <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> in
<span class="token punctuation">}</span>

<span class="token keyword">type</span> A <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>a A<span class="token punctuation">)</span> <span class="token function">Foo</span><span class="token punctuation">(</span>in <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> in <span class="token punctuation">}</span>

<span class="token keyword">var</span> Bar <span class="token operator">=</span> <span class="token number">0</span>

<span class="token keyword">func</span> <span class="token function">TestMockXXX</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">PatchConvey</span><span class="token punctuation">(</span><span class="token string">&quot;TestMockXXX&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">Mock</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// mock函数 </span>
		<span class="token function">Mock</span><span class="token punctuation">(</span>A<span class="token punctuation">.</span>Foo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// mock方法 </span>
		<span class="token function">MockValue</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>Bar<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">To</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>           <span class="token comment">// mock变量 </span>

		<span class="token function">So</span><span class="token punctuation">(</span><span class="token function">Foo</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ShouldEqual<span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span>        <span class="token comment">// 断言\`Foo\`成功mock </span>
		<span class="token function">So</span><span class="token punctuation">(</span><span class="token function">new</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Foo</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ShouldEqual<span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 断言\`A.Foo\`成功mock </span>
		<span class="token function">So</span><span class="token punctuation">(</span>Bar<span class="token punctuation">,</span> ShouldEqual<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>               <span class="token comment">// 断言\`Bar\`成功mock </span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token comment">// \`PatchConvey\`外自动释放mock</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">Foo</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment">// a</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">new</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Foo</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// b</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>Bar<span class="token punctuation">)</span>             <span class="token comment">// 0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function v(b,f){const a=o("ExternalLinkIcon");return p(),c("div",null,[u,k,r,n("p",null,[n("a",d,[s("https://github.com/bytedance/mockey"),e(a)])]),m])}const y=t(l,[["render",v],["__file","mockey.html.vue"]]);export{y as default};
