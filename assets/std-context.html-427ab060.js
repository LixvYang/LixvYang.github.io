const t=JSON.parse('{"key":"v-6f8bc77d","path":"/posts/program/golang/%E6%A0%87%E5%87%86%E5%BA%93%E5%AD%A6%E4%B9%A0/%E5%AE%98%E6%96%B9%E6%A0%87%E5%87%86%E5%BA%93%E5%AD%A6%E4%B9%A0/std-context.html","title":"Go Context包详解","lang":"zh-CN","frontmatter":{"icon":"snow","date":"2023-05-31T00:00:00.000Z","isOriginal":true,"category":["tutorial"],"tag":["golang"],"description":"Go Context包详解 相关信息 context 包定义了 Context 类型，它在 API 边界和进程之间传递截止时间、取消信号和其他与请求相关的值。 这样说可能你还是一脸懵。 举例 可以将 context 想象成传递信号的工具，类似于你向一个进程发送信号，告诉它该做什么或者取消它正在做的事情。 假设你是一名团队的领导，你负责协调团队中的各个成员完成任务。你希望每个成员都能在规定的时间内完成自己的任务，如果有需要的话，你还想提前告知他们任务的截止时间或者取消任务。在这种情况下，你可以使用 context 包来实现这些功能。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/program/golang/%E6%A0%87%E5%87%86%E5%BA%93%E5%AD%A6%E4%B9%A0/%E5%AE%98%E6%96%B9%E6%A0%87%E5%87%86%E5%BA%93%E5%AD%A6%E4%B9%A0/std-context.html"}],["meta",{"property":"og:site_name","content":"离心的Blog"}],["meta",{"property":"og:title","content":"Go Context包详解"}],["meta",{"property":"og:description","content":"Go Context包详解 相关信息 context 包定义了 Context 类型，它在 API 边界和进程之间传递截止时间、取消信号和其他与请求相关的值。 这样说可能你还是一脸懵。 举例 可以将 context 想象成传递信号的工具，类似于你向一个进程发送信号，告诉它该做什么或者取消它正在做的事情。 假设你是一名团队的领导，你负责协调团队中的各个成员完成任务。你希望每个成员都能在规定的时间内完成自己的任务，如果有需要的话，你还想提前告知他们任务的截止时间或者取消任务。在这种情况下，你可以使用 context 包来实现这些功能。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-03T03:26:17.000Z"}],["meta",{"property":"article:author","content":"离心"}],["meta",{"property":"article:tag","content":"golang"}],["meta",{"property":"article:published_time","content":"2023-05-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-03T03:26:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Go Context包详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-31T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-03T03:26:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"离心\\"}]}"]]},"headers":[],"git":{"createdTime":1693711577000,"updatedTime":1693711577000,"contributors":[{"name":"lixin","email":"lixin@lixins-MacBook-Pro.local","commits":1}]},"readingTime":{"minutes":1.87,"words":561},"filePathRelative":"posts/program/golang/标准库学习/官方标准库学习/std-context.md","localizedDate":"2023年5月31日","excerpt":"<h1> Go Context包详解</h1>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">相关信息</p>\\n<p>context 包定义了 Context 类型，它在 API 边界和进程之间传递截止时间、取消信号和其他与请求相关的值。</p>\\n</div>\\n<p>这样说可能你还是一脸懵。</p>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">举例</p>\\n<p>可以将 context 想象成传递信号的工具，类似于你向一个进程发送信号，告诉它该做什么或者取消它正在做的事情。</p>\\n<p>假设你是一名团队的领导，你负责协调团队中的各个成员完成任务。你希望每个成员都能在规定的时间内完成自己的任务，如果有需要的话，你还想提前告知他们任务的截止时间或者取消任务。在这种情况下，你可以使用 context 包来实现这些功能。</p>\\n</div>","autoDesc":true}');export{t as data};
